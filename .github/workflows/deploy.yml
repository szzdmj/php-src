name: Build PHP WASM for Cloudflare Workers

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: [self-hosted, Linux, x64]

    steps:
- name: Checkout source
  uses: actions/checkout@v4

- name: Install dependencies
  run: |
    sudo apt-get update
    sudo apt-get install -y \
      build-essential \
      cmake \
      python3 \
      curl \
      git \
      autoconf \
      bison \
      re2c \
      libxml2-dev \
      libsqlite3-dev \
      libcurl4-openssl-dev \
      libssl-dev \
      pkg-config

- name: Set up Emscripten SDK
  run: |
    git clone https://github.com/emscripten-core/emsdk.git
    cd emsdk
    ./emsdk install latest
    ./emsdk activate latest
    echo "source $(pwd)/emsdk_env.sh" >> $GITHUB_ENV

- name: Load Emscripten environment
  run: |
    source emsdk/emsdk_env.sh
    echo "EMSDK_ENV=$PWD/emsdk/emsdk_env.sh" >> $GITHUB_ENV

- name: Clean previous builds
  run: |
    git clean -xfd || true
    make clean || true

- name: Generate configure script
  run: |
    source "$EMSDK_ENV"
    ./buildconf --force

- name: Configure PHP with Emscripten
  run: |
    source "$EMSDK_ENV"
    emconfigure ./configure \
      --disable-all \
      --without-pear \
      --enable-session \
      --enable-mbstring \
      --with-curl \
      --disable-cli

- name: Build libphp
  run: |
    source "$EMSDK_ENV"
    emmake make -j$(nproc)

- name: Add embed_main.c
  run: |
    cat <<EOF > embed_main.c
    #include <php_embed.h>
    int main(int argc, char **argv) {
      PHP_EMBED_START_BLOCK(argc, argv);
      zend_eval_string("echo 'âœ… Hello from PHP WASM';", NULL, "embedded_code");
      PHP_EMBED_END_BLOCK();
      return 0;
    }
