name: Build PHP WASM for Cloudflare Workers

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, Linux, x64]
    steps:
      - name: Checkout PHP repository
        uses: actions/checkout@v4

      - name: Setup Emscripten SDK
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          echo "source $(pwd)/emsdk_env.sh" >> $GITHUB_ENV
          cd ..

      - name: Clone and Build Oniguruma for Emscripten
        run: |
          source ./emsdk/emsdk_env.sh
          git clone https://github.com/kkos/oniguruma.git
          cd oniguruma
          emcmake cmake -Bbuild
          emmake make -C build
          echo "ONIG_CFLAGS=-I$(pwd)/src" >> $GITHUB_ENV
          echo "ONIG_LIBS=$(pwd)/build/libonig.a" >> $GITHUB_ENV
          cd ..
      - name: Remove PCRE JIT Sources
        run: |
          rm -f ext/pcre/pcre2lib/pcre2_jit_compile.c
          rm -rf ext/pcre/pcre2lib/sljit

      - name: Disable OPCache in PHP source
        run: |
          touch ext/opcache/config.m4

      - name: Patch PCRE to force static build
        run: |
          cat > ext/pcre/config.m4 <<'EOF'
          PHP_ARG_ENABLE(pcre, whether to enable PCRE support,
          [  --enable-pcre           Enable PCRE support], yes)

          if test "$PHP_PCRE" != "no"; then
            PHP_NEW_EXTENSION(pcre, php_pcre.c, yes)
            PHP_ADD_BUILD_DIR(ext/pcre/pcre2lib, 1)
            PHP_ADD_INCLUDE(ext/pcre/pcre2lib)

            PCRE2_SOURCES="
              pcre2lib/pcre2_auto_possess.c
              pcre2lib/pcre2_compile.c
              pcre2lib/pcre2_config.c
              pcre2lib/pcre2_context.c
              pcre2lib/pcre2_convert.c
              pcre2lib/pcre2_dfa_match.c
              pcre2lib/pcre2_error.c
              pcre2lib/pcre2_extuni.c
              pcre2lib/pcre2_find_bracket.c
              pcre2lib/pcre2_maketables.c
              pcre2lib/pcre2_match.c
              pcre2lib/pcre2_match_data.c
              pcre2lib/pcre2_newline.c
              pcre2lib/pcre2_ord2utf.c
              pcre2lib/pcre2_pattern_info.c
              pcre2lib/pcre2_script_run.c
              pcre2lib/pcre2_serialize.c
              pcre2lib/pcre2_string_utils.c
              pcre2lib/pcre2_study.c
              pcre2lib/pcre2_substitute.c
              pcre2lib/pcre2_substring.c
              pcre2lib/pcre2_tables.c
              pcre2lib/pcre2_ucd.c
              pcre2lib/pcre2_valid_utf.c
              pcre2lib/pcre2_xclass.c
            "

            PHP_ADD_SOURCES(pcre, $PCRE2_SOURCES)
          fi
          EOF

      - name: Clean previous build and regenerate configuration
        run: |
          source ./emsdk/emsdk_env.sh
          make distclean || true
          ./buildconf --force
          ls -l  # 确保 configure 文件存在

      - name: Configure PHP for Emscripten WASM build (with static PCRE)
        run: |
          source ./emsdk/emsdk_env.sh
          emconfigure ./configure \
            --host=wasm32-unknown-emscripten \
            --disable-all \
            --disable-cli \
            --enable-embed=static \
            --enable-pcre \
            --enable-mbstring \
            --enable-session \
            --enable-filter \
            --enable-tokenizer \
            --without-libxml \
            --disable-opcache \
            PKG_CONFIG_PATH=/dev/null \
            ONIG_CFLAGS="$ONIG_CFLAGS" \
            ONIG_LIBS="$ONIG_LIBS" > configure.log 2>&1
          cat configure.log

      - name: Fix Makefile to force static PCRE link
        run: |
          find . -name "Makefile*" | xargs sed -i 's/pcre.la/pcre.a/g'

      - name: Build Optimized PHP WASM
        run: |
          source ./emsdk/emsdk_env.sh
          emmake make -j$(nproc) CFLAGS="-O3" V=1 > make.log 2>&1 || true
      - name: Upload build logs (always run)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            configure.log
            make.log
      - name: Strip debug symbols for smaller WASM
        if: success()  # 只有make成功才Strip
        run: |
          wget https://github.com/WebAssembly/wabt/releases/download/1.0.33/wabt-1.0.33-ubuntu.tar.gz
          tar xzf wabt-1.0.33-ubuntu.tar.gz
          ./wabt-1.0.33/bin/wasm-strip sapi/embed/php.wasm
      - name: Upload php.wasm
        if: success()  # 只有make成功才上传wasm
        uses: actions/upload-artifact@v4
        with:
          name: php.wasm
          path: sapi/embed/php.wasm
